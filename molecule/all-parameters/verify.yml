---
- name: Verify
  hosts: all
  become: true

  tasks:
    - name: Should template docker file
      slurp:
        src: /opt/nextcloud/docker/Dockerfile
      register: docker_file
      failed_when:
        not docker_file.content == ( expected_content | b64encode )
      vars:
        expected_content: |
          FROM nextcloud:20.0.4

          MAINTAINER borisskert <boris.skert@gmail.com>

          RUN set -ex; \
              \
              apt-get update; \
              apt-get install -y --no-install-recommends \
                  smbclient \
                  ; \
              rm -rf /var/lib/apt/lists/*;

    - name: Should template docker-compose file
      slurp:
        src: /opt/nextcloud/docker/docker-compose.yml
      register: docker_compose_file
      failed_when:
        not docker_compose_file.content == ( expected_content | b64encode )
      vars:
        expected_content: |
          version: '3.2'

          # See https://hub.docker.com/_/nextcloud/

          services:
            db:
              image: postgres:12.5
              volumes:
                - /srv/my_nextcloud/database:/var/lib/postgresql/data
              environment:
                - POSTGRES_DB=nextcloud_db
                - POSTGRES_USER=nextcloud
                - POSTGRES_PASSWORD=/run/secrets/postgres_password
              secrets:
                - postgres_password
              restart: unless-stopped

            app:
              build: .
              image: local/nextcloud:20.0.4
              container_name: nextcloud_web
              ports:
                - 127.0.0.1:10080:80
              volumes:
                - /srv/my_nextcloud/www:/var/www/html
                - /srv/my_nextcloud/data:/var/www/html/data
                - /srv/my_nextcloud/custom_apps:/var/www/html/custom_apps
              environment:
                - POSTGRES_HOST=db
                - POSTGRES_DB=nextcloud_db
                - POSTGRES_USER=nextcloud
                - POSTGRES_PASSWORD=/run/secrets/postgres_password
              depends_on:
                - db
              secrets:
                - postgres_password
              restart: unless-stopped

          secrets:
            postgres_password:
              file: ./postgres_password.txt

    - name: Should nextcloud systemd unit file
      slurp:
        src: /etc/systemd/system/nextcloud.service
      register: nextcloud_service_file
      failed_when:
        not nextcloud_service_file.content == ( expected_content | b64encode )
      vars:
        expected_content: |
          [Install]
          WantedBy=multi-user.target

          [Unit]
          Description=nextcloud service
          After=docker.service
          Requires=docker.service

          [Service]
          ExecStartPre=-/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            down \
            --remove-orphans

          ExecStartPre=/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            build

          ExecStart=/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            up \
            --build

          ExecStop=-/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            exec -T -u 033 app \
            php occ db:add-missing-columns

          ExecStop=-/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            exec -T -u 033 app \
            php occ db:add-missing-primary-keys

          ExecStop=-/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            exec -T -u 033 app \
            php occ db:add-missing-indices

          ExecStop=-/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            exec -T -u 033 app \
            php occ db:convert-filecache-bigint --no-interaction

          ExecStop=/usr/bin/docker compose \
            --project-directory /opt/nextcloud/docker \
            --file /opt/nextcloud/docker/docker-compose.yml \
            --project-name nextcloud \
            down \
            --remove-orphans

          Restart=always
          RestartSec=60s
          TimeoutSec=3600

    - name: Should nextcloud-background-jobs service systemd unit file
      slurp:
        src: /etc/systemd/system/nextcloud-background-jobs.service
      register: nextcloud_background_service_file
      failed_when:
        not nextcloud_background_service_file.content == ( expected_content | b64encode )
      vars:
        expected_content: |
          [Unit]
          Description=nextcloud-background-jobs service
          Requires=nextcloud.service

          [Service]
          ExecStart=/usr/bin/docker exec \
            -u 033 \
            nextcloud_web \
            php -f /var/www/html/cron.php

          Restart=no
          TimeoutSec=3600

    - name: Should nextcloud-background-jobs timer systemd unit file
      slurp:
        src: /etc/systemd/system/nextcloud-background-jobs.timer
      register: nextcloud_background_timer_file
      failed_when:
        not nextcloud_background_timer_file.content == ( expected_content | b64encode )
      vars:
        expected_content: |
          [Unit]
          Description=Run nextcloud background jobs

          [Timer]
          OnCalendar=*:0/5
          Persistent=true

          [Install]
          WantedBy=timers.target

    - name: Should create www volume
      stat:
        path: /srv/my_nextcloud/www
      register: www_volume_directory
      failed_when: not www_volume_directory.stat.exists

    - name: Should create database volume
      stat:
        path: /srv/my_nextcloud/database
      register: database_volume_directory
      failed_when: not database_volume_directory.stat.exists

    - name: Should open 10080/tcp port
      command: nc -z -w1 localhost 10080
      changed_when: false
      register: netcat_10080
      retries: 300
      delay: 1
      until: netcat_10080 is defined and (
        netcat_10080.rc == 0
        or netcat_10080.rc == 2) # nc command not found
      failed_when: netcat_10080 is defined
        and netcat_10080.rc != 0
      when: not (
        molecule_docker_environment is defined
        and molecule_docker_environment | bool
        )
